package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.63

import (
	"context"
	"fmt"

	"github.com/Atipat-CMU/api-gateway/external/handler/adaptors/graphql/model"
	"github.com/Atipat-CMU/api-gateway/external/handler/adaptors/graphql/query"
)

// User is the resolver for the user field.
func (r *queryResolver) User(ctx context.Context) (*model.User, error) {
	id := ctx.Value("user_id").(string)
	if id == "" {
		return nil, fmt.Errorf("unauthenticated")
	}
	return query.NewUserQuery(r.UserSrv).GetUser(id)
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
